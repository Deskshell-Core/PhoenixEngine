/**

    @author: Ingwie Phoenix <ingwie2000@gmail.com>
    @desc: This is the buildfile for Phoenix Engine.
           Please keep in mind, that **ALL** files from $CWD/.IceTea are
           automatically being included by the engine itself.

*/
function libName(name) {
    return "lib${name}";
}

target("PECore", "lib") {
    input: []
        // Common - bindings and such.
        + pfs.glob("PhoenixEngine/common/","*.cpp")
        // Renderer stuff.
        + pfs.glob("PhoenixEngine/content/","*.cpp")
        // Browser, main process stuff
        + pfs.glob("PhoenixEngine/browser/","*.cpp")
        // Application runtimes, IPC, etc.
        + pfs.glob("PhoenixEngine/app/","*.cpp"),
    settings: {
        CXX: {
            warnings: [],
            standard: "c++98",
            includes: ["PhoenixEngine/"]
        },
        LINK: {
            strip_all: true
        }
    },
    needs: [
            //"curl",
            "canister",
            "ttvfs"
        ] + IceTea.tag("angelscript")
        + IceTea.tag("as-ext")
        + IceTea.tag("php")
        + IceTea.tag("php-ext")
        + IceTea.tag("uv")
        + IceTea.tag("sqlite")
        + IceTea.tag("nodejs-lib")
        + IceTea.tag("brightray")
        + IceTea.tag("chromium_content"),
    exports: {
        // Global exports for all platforms.
        CXX: {
            includeDirs: ["PhoenixEngine/"]
        },
        LINK: {
            libraries: ["PhoenixEngine"],
            // Quickly generate the libraryname. PREFIX is the install prefix.
            library_path: "$(PREFIX)/"..libName("PhoenixEngine")
        },
        INSTALL: {
            headers: [
                // Dir : Headers.
                {"PhoenixEngine/common/":  ["PhoenixEngine/common/*.h"]},
                {"PhoenixEngine/app/":     ["PhoenixEngine/app/*.h"]},
                {"PhoenixEngine/content/": ["PhoenixEngine/content/*.h"]},
                {"PhoenixEngine/browser/": ["PhoenixEngine/browser/*.h"]},
            ]
        },
        // Mac OS has: App, Framework, Bundle. Should this trigger in GNUStep too?
        Framework: {
            Plist: "PhoenixEngine/PE-Info.plist",
            Resources: "PhoenixEngine/Resources",
            // maybe IceTea should automatically figure this out...? Most probably should.
            library_path: "@rpath/../Frameworks/Phoenix Engine.framework/Phoenix Engine"
        }
    },
    init: function() {
        print "Welcome to Phoenix Engine!"
    },
    configure: function() {
        if(cli.check("--debug")) {
            @settings.CXX.optimization = "none";
        }

        /*var conf = require("PhoenixEngine/info.os");
        for(var k,v in conf) {
            config.set(k, v);
        }*/

        // Looks if *.in exists and generates .in-less version.
        //config.transform("PhoenixEngine/PE-Info.plist");
    }
}

/*
target("Phoenix Engine", "osx-framework") {
    input: ["PhoenixEngine/objc/*.m", "PhoenixEngine/objc/*.mm"],
    needs: ["PECore"],
    exports: {
        INSTALL: {
            headers: [
                {"PhoenixEngine/objc/": ["PhoenixEngine/objc/*.h"]}
            ]
        }
    }
}
*/

target("PhoenixEngine", "shlib") {
    needs: ["PECore"]
}
